[
  {
    "name": "Mixpanel",
    "comment": " This library allows you to send events to Mixpanel and update user profiles.\n\nThese operation simply map to those described in the [Mixpanel HTTP Tracking API\ndocumentation](https://mixpanel.com/help/reference/http), so refer to that for\nfurther clarification.\n\n# Setting up\n\n@docs Config\n\n# Tracking events\n\n@docs Event, Properties, track\n\n# Updating user profiles\n\n@docs EngageProperties, peopleSet, peopleSetOnce, peopleAdd, peopleAppend\n@docs peopleUnion, peopleRemove, peopleUnset, peopleDelete\n\n",
    "aliases": [
      {
        "name": "Config",
        "comment": " Configuration for accessing Mixpanel, keep this in your Model.\n",
        "args": [],
        "type": "{ baseUrl : String, token : String, ip : Bool }"
      },
      {
        "name": "EngageProperties",
        "comment": " When updating Mixpanel profiles the distinctId is required, pass it here\ninstead of as a property.\n",
        "args": [],
        "type": "{ distinctId : String }"
      },
      {
        "name": "Event",
        "comment": " A Mixpanel event has a name and some properties.\n",
        "args": [],
        "type": "{ event : String, properties : Mixpanel.Properties }"
      },
      {
        "name": "Properties",
        "comment": " A list of extra properties to pass to Mixpanel.\n",
        "args": [],
        "type": "List ( String, Json.Encode.Value )"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "peopleAdd",
        "comment": " Takes properties with numerical values and adds the values to the existing\nproperty's value (or 0). Passing negative values will decrement the profile's\nvalue.\n\n    peopleAdd (config \"my-token\")\n        { distinctId = \"13793\" }\n        [ ( \"Coins Gathered\", Json.Encode.int 12 ) ]\n\n",
        "type": "Mixpanel.Config -> Mixpanel.EngageProperties -> Mixpanel.Properties -> Task.Task Http.Error ()"
      },
      {
        "name": "peopleAppend",
        "comment": " Takes properties and appends each value to a list associated with the\nproperty.\n\n    peopleAppend (config \"my-token\")\n         { distinctId = \"13793\" }\n         [ ( \"Power Ups\", Json.Encode.string \"Bubble Lead\" ) ]\n\n",
        "type": "Mixpanel.Config -> Mixpanel.EngageProperties -> Mixpanel.Properties -> Task.Task Http.Error ()"
      },
      {
        "name": "peopleDelete",
        "comment": " Delete the profile from Mixpanel.\n\n    peopleDelete (config \"my-token\") { distinctId = \"13793\" }\n\n",
        "type": "Mixpanel.Config -> Mixpanel.EngageProperties -> Task.Task Http.Error ()"
      },
      {
        "name": "peopleRemove",
        "comment": " Takes properties and removes the values from the associated lists on the\nprofile.\n\n    peopleRemove (config \"my-token\")\n        { distinctId = \"13793\" }\n        [ ( \"Items purchased\", Json.Encode.string \"socks\" ) ]\n\n",
        "type": "Mixpanel.Config -> Mixpanel.EngageProperties -> Mixpanel.Properties -> Task.Task Http.Error ()"
      },
      {
        "name": "peopleSet",
        "comment": " Sets the properties on a user profile.\n\n    peopleSet (config \"my-token\")\n        { distinctId = \"13793\" }\n        [ ( \"Address\", Json.Encode.string \"1313 Mockingbird Lane\" )\n        , ( \"Birthday\", Json.Encode.string \"1948-01-01\" ) ]\n\n",
        "type": "Mixpanel.Config -> Mixpanel.EngageProperties -> Mixpanel.Properties -> Task.Task Http.Error ()"
      },
      {
        "name": "peopleSetOnce",
        "comment": " Same as peopleSet but will not overwrite existing property values.\n\n    peopleSetOnce (config \"my-token\")\n        { distinctId = \"13793\" }\n        [ ( \"First login date\", Json.Encode.string \"2013-04-01T13:20:00\" ) ]\n\n",
        "type": "Mixpanel.Config -> Mixpanel.EngageProperties -> Mixpanel.Properties -> Task.Task Http.Error ()"
      },
      {
        "name": "peopleUnion",
        "comment": " Takes properties with list values and merges them with the existing profile\nvalues.\n\n    peopleUnion (config \"my-token\")\n        { distinctId = \"13793\" }\n        [ ( \"Items purchased\"\n          , Json.Encode.list [ Json.Encode.string \"socks\"\n                             , Json.Encode.string \"shirts\"\n                             ]\n          )\n        ]\n\n",
        "type": "Mixpanel.Config -> Mixpanel.EngageProperties -> Mixpanel.Properties -> Task.Task Http.Error ()"
      },
      {
        "name": "peopleUnset",
        "comment": " Takes a list of property names and removes them from the profile.\n\n    peopleUnset (config \"my-token\")\n        { distinctId = \"13793\" }\n        [ \"Days Overdue\" ]\n\n",
        "type": "Mixpanel.Config -> Mixpanel.EngageProperties -> List String -> Task.Task Http.Error ()"
      },
      {
        "name": "track",
        "comment": " Track sends an event to Mixpanel.\n\n    track (config \"my-token\")\n        { event = \"Signed Up\"\n        , properties = [ ( \"Referred By\", Json.Encode.string \"Friend\" )\n                       , ( \"distinct_id\", Json.Encode.string \"13793\" )\n                       ]\n        }\n\nMixpanel also recognises some special property names.\n\n- `distinct_id`: a per-user ID that Mixpanel uses to group events together.\n- `time`: the time the event occurred, by default Mixpanel will use the time\n  they receive the event.\n- `ip`: used for adding geolocation information to the event, if not given and\n  if config has `ip = True` then the ip of the request is used.\n\nAn example showing all three,\n\n    track (config \"my-token\")\n        { event = \"Level Complete\"\n        , properties = [ ( \"Level Number\", Json.Encode.int 9 )\n                       , ( \"distinct_id\", Json.Encode.string \"13793\" )\n                       , ( \"time\", Json.Encode.int 1358208000 )\n                       , ( \"ip\", Json.Encode.string \"203.0.113.9\" )\n                       ]\n        }\n",
        "type": "Mixpanel.Config -> Mixpanel.Event -> Task.Task Http.Error ()"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  }
]