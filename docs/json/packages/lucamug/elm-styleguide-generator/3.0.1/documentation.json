[
  {
    "name": "Styleguide",
    "comment": " This simple package generates a page with Style Guides.\nIt uses certain data structure that each section of the framework expose ([Example](https://lucamug.github.io/elm-styleguide-generator/), [Example source](https://github.com/lucamug/elm-styleguide-generator/blob/master/examples/Main.elm)).\n\nThe idea is to have a Living version of the Style Guide that always stays\nupdated with no maintenance.\n\nFor more info about the idea, see [this post](https://medium.com/@l.mugnaini/zero-maintenance-always-up-to-date-living-style-guide-in-elm-dbf236d07522).\n\n\n# Functions\n\n@docs Introspection, Model, Msg, update, view, viewPage, viewSection, viewSections\n\n",
    "aliases": [
      {
        "name": "Introspection",
        "comment": " This is the type that is required for Introspection\n\nExample, inside Framework.Button:\n\n    introspection : Styleguide.Introspection msg\n    introspection =\n        { name = \"Button\"\n        , signature = \"button : List Modifier -> Maybe msg -> String -> Element msg\"\n        , description = \"Buttons accept a list of modifiers, a Maybe msg (for example: \\\"Just DoSomething\\\") and the text to display inside the button.\"\n        , usage = \"button [ Medium, Success, Outlined ] Nothing \\\"Button\\\"\"\n        , usageResult = button [ Medium, Success, Outlined ] Nothing \"Button\"\n        , boxed = False\n        , types =\n            [ ( \"Sizes\"\n              , [ ( button [ Small ] Nothing \"Button\", \"button [ Small ] Nothing \\\"Button\\\"\" )\n                , ( button [ Medium ] Nothing \"Button\", \"button [ Medium ] Nothing \\\"Button\\\"\" )\n                , ( button [ Large ] Nothing \"Button\", \"button [ Large ] Nothing \\\"Button\\\"\" )\n                ]\n              )\n            ]\n        }\n\n",
        "args": [
          "msg"
        ],
        "type": "{ name : String , signature : String , description : String , usage : String , usageResult : Element.Element Styleguide.Msg , types : List ( String, List ( Element.Element msg, String ) ) , boxed : Bool }"
      },
      {
        "name": "Model",
        "comment": " ",
        "args": [],
        "type": "List ( Styleguide.Introspection Styleguide.Msg, Bool )"
      }
    ],
    "types": [
      {
        "name": "Msg",
        "comment": " ",
        "args": [],
        "cases": []
      }
    ],
    "values": [
      {
        "name": "update",
        "comment": " ",
        "type": "Styleguide.Msg -> Styleguide.Model -> ( Styleguide.Model, Platform.Cmd.Cmd Styleguide.Msg )"
      },
      {
        "name": "view",
        "comment": " This create the entire page of Html type.\n\nExample, in your Style Guide page:\n\n    main : Html.Html msg\n    main =\n        Styleguide.viewHtmlPage\n            [ Framework.Button.introspection\n            , Framework.Color.introspection\n            ]\n\n",
        "type": "Styleguide.Model -> Html.Html Styleguide.Msg"
      },
      {
        "name": "viewPage",
        "comment": " This create the entire page of Element type. If you are working\nwith style-elements this is the way to go, so you can customize your page.\n\nExample, in your Style Guide page:\n\n    main : Html.Html msg\n    main =\n        layout layoutAttributes <|\n            column []\n                [ ...\n                , Styleguide.page\n                    [ Framework.Button.introspection\n                    , Framework.Color.introspection\n                    ]\n                ...\n                ]\n\n",
        "type": "Styleguide.Model -> Element.Element Styleguide.Msg"
      },
      {
        "name": "viewSection",
        "comment": " This function create a section of the page based on the input data.\n\nExample:\n\n    section Framework.Button.introspection\n\n",
        "type": "Styleguide.Introspection Styleguide.Msg -> Bool -> Element.Element Styleguide.Msg"
      },
      {
        "name": "viewSections",
        "comment": " ",
        "type": "Styleguide.Model -> Element.Element Styleguide.Msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  }
]