[
  {
    "name": "Float.Extra",
    "comment": " Convenience functions for working with `Float` values. Examples assume that\nthis module has been imported using:\n\n    import Float.Extra as Float\n\n@docs equalWithin, interpolateFrom\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "equalWithin",
        "comment": " Check if two values are equal within a given tolerance.\n\n    Float.equalWithin 1e-6 1.9999 2.0001\n    --> False\n\n    Float.equalWithin 1e-3 1.9999 2.0001\n    --> True\n\n",
        "type": "Float -> Float -> Float -> Bool"
      },
      {
        "name": "interpolateFrom",
        "comment": " Interpolate from the first value to the second, based on a parameter that\nranges from zero to one. Passing a parameter value of zero will return the start\nvalue and passing a parameter value of one will return the end value.\n\n    Float.interpolateFrom 5 10 0\n    --> 5\n\n    Float.interpolateFrom 5 10 1\n    --> 10\n\n    Float.interpolateFrom 5 10 0.6\n    --> 8\n\nThe end value can be less than the start value:\n\n    Float.interpolateFrom 10 5 0.1\n    --> 9.5\n\nParameter values less than zero or greater than one can be used to extrapolate:\n\n    Float.interpolateFrom 5 10 1.5\n    --> 12.5\n\n    Float.interpolateFrom 5 10 -0.5\n    --> 2.5\n\n    Float.interpolateFrom 10 5 -0.2\n    --> 11\n\n",
        "type": "Float -> Float -> Float -> Float"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  }
]