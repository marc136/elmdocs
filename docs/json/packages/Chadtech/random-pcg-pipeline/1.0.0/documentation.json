[
  {
    "name": "Random.Pcg.Pipeline",
    "comment": "\n\n@docs from, with, always, finish\n\n",
    "aliases": [],
    "types": [],
    "values": [
      {
        "name": "always",
        "comment": " `always` give the same value.\n",
        "type": "a -> ( a -> b, Random.Pcg.Seed ) -> ( b, Random.Pcg.Seed )"
      },
      {
        "name": "finish",
        "comment": " ",
        "type": "( Random.Pcg.Seed -> a, Random.Pcg.Seed ) -> a"
      },
      {
        "name": "from",
        "comment": " Make a random value `from` a `Seed`\n",
        "type": "Random.Pcg.Seed -> a -> ( a, Random.Pcg.Seed )"
      },
      {
        "name": "with",
        "comment": " Continue down the pipeline, adding a random value `with` a generator\n",
        "type": "Random.Pcg.Generator a -> ( a -> b, Random.Pcg.Seed ) -> ( b, Random.Pcg.Seed )"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  }
]