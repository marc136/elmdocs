[
  {
    "name": "Engage.Http",
    "comment": " Helpers for working with DNN Web API\n\n\n# Types\n\n@docs Config\n\n\n# Http Verbs\n\n@docs get, post, patch, put, delete\n\n\n# Helper functions\n\n@docs getErrorMessage\n\n\n# Decode/Encoder\n\n@docs configDecoder, serverErrorDecoder, multipleServerErrorDecoder, nullDecoder\n\n",
    "aliases": [
      {
        "name": "Config",
        "comment": " Configuration type\n\n  - `baseUrl` the base URL for Http request\n  - `headers`: `list of the header for Http request\n\n",
        "args": [],
        "type": "{ baseUrl : String, headers : List Http.Header }"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "configDecoder",
        "comment": " Json decoder for `Config`\n",
        "type": "Json.Decode.Decoder Engage.Http.Config"
      },
      {
        "name": "delete",
        "comment": " Http DELETE\n",
        "type": "Engage.Http.Config -> { methodName : String, value : Json.Encode.Value } -> Task.Task Basics.Never (RemoteData.WebData String)"
      },
      {
        "name": "get",
        "comment": " Http GET\n",
        "type": "Engage.Http.Config -> Json.Decode.Decoder success -> { methodName : String , queryStringParams : List ( String, String ) } -> Task.Task Basics.Never (RemoteData.WebData success)"
      },
      {
        "name": "getErrorMessage",
        "comment": " Get the localized error message from the `Http.Error`\n",
        "type": "{ a | localization : Engage.Localization.Localization } -> Http.Error -> String"
      },
      {
        "name": "multipleServerErrorDecoder",
        "comment": " Json decoder for multiple server error messages, localized.\n",
        "type": "{ a | localization : Engage.Localization.Localization } -> Json.Decode.Decoder String"
      },
      {
        "name": "nullDecoder",
        "comment": " Null decoder. Useful for when the server doesn't return any value.\n",
        "type": "Json.Decode.Decoder ()"
      },
      {
        "name": "patch",
        "comment": " Http PATCH\n",
        "type": "Engage.Http.Config -> Json.Decode.Decoder success -> { methodName : String, value : Json.Encode.Value } -> Task.Task Basics.Never (RemoteData.WebData success)"
      },
      {
        "name": "post",
        "comment": " Http POST\n",
        "type": "Engage.Http.Config -> Json.Decode.Decoder success -> { methodName : String, value : Json.Encode.Value } -> Task.Task Basics.Never (RemoteData.WebData success)"
      },
      {
        "name": "put",
        "comment": " Http PUT\n",
        "type": "Engage.Http.Config -> Json.Decode.Decoder success -> { methodName : String, value : Json.Encode.Value } -> Task.Task Basics.Never (RemoteData.WebData success)"
      },
      {
        "name": "serverErrorDecoder",
        "comment": " Json decoder for server error, localized.\n",
        "type": "{ a | localization : Engage.Localization.Localization } -> Json.Decode.Decoder String"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  }
]